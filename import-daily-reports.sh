#!/bin/bash

# Script para importar relat√≥rios di√°rios em lote

GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${CYAN}‚ïë  üìä IMPORTADOR DE RELAT√ìRIOS DI√ÅRIOS                          ‚ïë${NC}"
echo -e "${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}\n"

# Verificar se o diret√≥rio existe
if [ ! -d "docs/daily_reports" ]; then
    echo -e "${RED}‚ùå Diret√≥rio docs/daily_reports n√£o encontrado${NC}"
    exit 1
fi

# Contar arquivos
FILE_COUNT=$(ls docs/daily_reports/*.json 2>/dev/null | wc -l)
echo -e "${BLUE}üìÅ Encontrados ${FILE_COUNT} arquivos de relat√≥rios di√°rios${NC}\n"

if [ $FILE_COUNT -eq 0 ]; then
    echo -e "${RED}‚ùå Nenhum arquivo JSON encontrado${NC}"
    exit 1
fi

# Mostrar arquivos encontrados
echo -e "${YELLOW}üìã Arquivos encontrados:${NC}"
ls docs/daily_reports/*.json | head -10 | while read file; do
    echo "  ‚Ä¢ $(basename "$file")"
done
if [ $FILE_COUNT -gt 10 ]; then
    echo "  ... e mais $((FILE_COUNT - 10)) arquivos"
fi
echo ""

# Op√ß√µes de importa√ß√£o
echo -e "${BLUE}‚îÅ‚îÅ‚îÅ OP√á√ïES DE IMPORTA√á√ÉO ‚îÅ‚îÅ‚îÅ${NC}\n"

echo -e "${YELLOW}1Ô∏è‚É£ Teste (Dry Run) - Ver o que seria importado:${NC}"
echo -e "docker-compose exec app php artisan reports:import-daily --dry-run"
echo ""

echo -e "${YELLOW}2Ô∏è‚É£ Importar todos os relat√≥rios:${NC}"
echo -e "docker-compose exec app php artisan reports:import-daily"
echo ""

echo -e "${YELLOW}3Ô∏è‚É£ Importar com for√ßa (sobrescrever existentes):${NC}"
echo -e "docker-compose exec app php artisan reports:import-daily --force"
echo ""

echo -e "${YELLOW}4Ô∏è‚É£ Importar per√≠odo espec√≠fico:${NC}"
echo -e "docker-compose exec app php artisan reports:import-daily --date-from=2025-07-01 --date-to=2025-07-31"
echo ""

echo -e "${YELLOW}5Ô∏è‚É£ Importar apenas um m√™s:${NC}"
echo -e "docker-compose exec app php artisan reports:import-daily --date-from=2025-07-01 --date-to=2025-07-31"
echo ""

# Executar teste por padr√£o
echo -e "${BLUE}‚îÅ‚îÅ‚îÅ EXECUTANDO TESTE (DRY RUN) ‚îÅ‚îÅ‚îÅ${NC}\n"

docker-compose exec app php artisan reports:import-daily --dry-run

echo ""
echo -e "${BLUE}‚îÅ‚îÅ‚îÅ PR√ìXIMOS PASSOS ‚îÅ‚îÅ‚îÅ${NC}\n"

echo -e "${GREEN}‚úÖ Para importar realmente:${NC}"
echo -e "docker-compose exec app php artisan reports:import-daily"
echo ""

echo -e "${GREEN}‚úÖ Para verificar relat√≥rios importados:${NC}"
echo -e "docker-compose exec app php artisan tinker --execute=\"echo 'Total de reports: ' . App\Models\Report::count() . PHP_EOL;\""
echo ""

echo -e "${GREEN}‚úÖ Para testar o dashboard com dados reais:${NC}"
echo -e "TOKEN=\$(curl -s http://localhost:8006/api/admin/login -X POST -H \"Content-Type: application/json\" -d '{\"email\":\"admin@dashboard.com\",\"password\":\"password123\"}' | jq -r '.token')"
echo -e "curl -s \"http://localhost:8006/api/admin/reports/domain/1/dashboard\" -H \"Authorization: Bearer \$TOKEN\" | jq '.data.kpis'"
echo ""

echo -e "${CYAN}üí° Dica: Ap√≥s importar, voc√™ ter√° dados reais de m√∫ltiplos dias para testar a agrega√ß√£o!${NC}"

